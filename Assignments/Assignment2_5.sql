create or replace PROCEDURE MOD_GRADE(P_COURSE_NO NUMBER,P_GRADE NUMBER)
IS
V_COURSE_EXSIT NUMBER;
V_ENROL_NUM NUMBER;
V_COUNTER NUMBER := 0;
CURSOR C_STUDENT IS SELECT * FROM ENROLLMENT WHERE SECTION_ID IN (SELECT SECTION_ID FROM SECTION WHERE COURSE_NO = P_COURSE_NO);
BEGIN
SELECT COUNT(*) INTO V_COURSE_EXSIT FROM COURSE WHERE COURSE_NO = P_COURSE_NO;
IF V_COURSE_EXSIT = 0 THEN
  DBMS_OUTPUT.PUT_LINE('This Course Number is invalid: ' || P_COURSE_NO);
ELSE 
  IF P_GRADE > 100 OR P_GRADE < 0 THEN 
    DBMS_OUTPUT.PUT_LINE('This Grade invalid: ' || P_GRADE ||' It must be between 0 and 100.');
  ELSE 
    SELECT COUNT(*) INTO V_ENROL_NUM FROM ENROLLMENT WHERE SECTION_ID IN (SELECT SECTION_ID FROM SECTION WHERE COURSE_NO = P_COURSE_NO); 
    IF V_ENROL_NUM = 0 THEN
      DBMS_OUTPUT.PUT_LINE('This Course has NOBODY enrolled so far: ' || P_COURSE_NO);
    ELSE 
      FOR i IN C_STUDENT LOOP
        UPDATE ENROLLMENT SET FINAL_GRADE = P_GRADE WHERE STUDENT_ID = i.STUDENT_ID AND SECTION_ID = i.SECTION_ID; 
        V_COUNTER := V_COUNTER + 1;
      END LOOP;
      DBMS_OUTPUT.PUT_LINE('Total # of grades changed to ' || P_GRADE ||' for course number ' || P_COURSE_NO || ' is ' || V_COUNTER);
    END IF;
  END IF;
END IF;
END MOD_GRADE;
