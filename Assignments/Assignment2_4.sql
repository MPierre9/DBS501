create or replace PACKAGE my_pack IS

FUNCTION TOTAL_COST(P_FIRST_NAME VARCHAR2, P_LAST_NAME VARCHAR2)
RETURN NUMBER;
FUNCTION TOTAL_COST(P_ZIP VARCHAR2)
RETURN NUMBER;

END my_pack;

/
create or replace PACKAGE BODY my_pack IS
FUNCTION TOTAL_COST(P_FIRST_NAME VARCHAR2, P_LAST_NAME VARCHAR2)
RETURN NUMBER
IS
V_STD_EXIST NUMBER;
V_ENROL_EXIST NUMBER;
V_TOTAL_COST NUMBER;
BEGIN
SELECT COUNT(*) INTO V_STD_EXIST FROM STUDENT WHERE UPPER(FIRST_NAME) = UPPER(P_FIRST_NAME) AND UPPER(LAST_NAME) = UPPER(P_LAST_NAME);
IF V_STD_EXIST = 0 THEN 
  RETURN -1;
ELSE 
  SELECT COUNT(*) INTO V_ENROL_EXIST FROM ENROLLMENT WHERE STUDENT_ID = (SELECT STUDENT_ID FROM STUDENT WHERE UPPER(FIRST_NAME) = UPPER(P_FIRST_NAME) AND UPPER(LAST_NAME) = UPPER(P_LAST_NAME));
  IF V_ENROL_EXIST = 0 THEN
    RETURN 0;
  ELSE 
    SELECT SUM(C.COST) INTO V_TOTAL_COST FROM ENROLLMENT E INNER JOIN SECTION S ON S.SECTION_ID = E.SECTION_ID INNER JOIN COURSE C ON C.COURSE_NO = S.COURSE_NO 
    WHERE E.STUDENT_ID = (SELECT STUDENT_ID FROM STUDENT WHERE UPPER(FIRST_NAME) = UPPER(P_FIRST_NAME) AND UPPER(LAST_NAME) = UPPER(P_LAST_NAME));
    RETURN V_TOTAL_COST;
  END IF;
END IF;

END TOTAL_COST;

FUNCTION TOTAL_COST(P_ZIP VARCHAR2)
RETURN NUMBER
IS
V_ZIP_EXIST NUMBER;
V_STD_COST NUMBER;
V_TOTAL_COST NUMBER := 0;
CURSOR C_STUDENT IS SELECT * FROM STUDENT WHERE UPPER(ZIP) = UPPER(P_ZIP); 
BEGIN
  SELECT COUNT(*) INTO V_ZIP_EXIST FROM ZIPCODE WHERE ZIP = P_ZIP;
  IF V_ZIP_EXIST = 0 THEN
    RETURN -1;
  ELSE
    FOR STD IN C_STUDENT LOOP
      V_STD_COST := TOTAL_COST(STD.FIRST_NAME, STD.LAST_NAME);
      V_TOTAL_COST := V_TOTAL_COST + V_STD_COST;
    END LOOP;
    RETURN V_TOTAL_COST;
  END IF;
END TOTAL_COST;


END my_pack;
/
